---
- name: Get iptables rules
  shell: iptables -L
  register: iptablesrules
  check_mode: no

- name: Enable iptables at boot
  service: name=iptables enabled=yes state=started

- name: Open apiserver port with iptables
  command: /sbin/iptables -I INPUT 1 -p udp --dport 8285 -j ACCEPT -m comment --comment "flannel-port"
  when: iptablesrules.stdout.find("flannel-port") == -1

- name: Open apiserver port with iptables
  command: /sbin/iptables -I FORWARD 1 -i flannel0 -o flannel0 -j ACCEPT -m comment --comment "flannel-f1"
  when: iptablesrules.stdout.find("flannel-f1") == -1

- name: Open apiserver port with iptables
  command: /sbin/iptables -I FORWARD 1 -i flannel0 ! -o flannel0 -j ACCEPT -m comment --comment "flannel-f2"
  when: iptablesrules.stdout.find("flannel-f2") == -1

- name: Open apiserver port with iptables
  command: /sbin/iptables -I FORWARD 1 -o flannel0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT -m comment --comment "flannel-f3"
  when: iptablesrules.stdout.find("flannel-f2") == -1

- name: Open apiserver port with iptables
  command: /sbin/iptables -I FORWARD -s {{ kube_overlay_ip }}/16 -j ACCEPT -m comment --comment "flannel-f4"
  when: iptablesrules.stdout.find("flannel-f4") == -1
  
- name: Open apiserver port with iptables
  command: ip route add {{ kube_service_addresses }} dev docker0
  
  
- name: Save iptables rules
  command: service iptables save
  when: iptablesrules.stdout.find("flannel") == -1
